// This file was generated by counterfeiter
package apifakes

import (
	"net/http"
	"sync"

	"github.com/cloudfoundry-incubator/galera-healthcheck/api"
)

type FakeReqHealthChecker struct {
	CheckReqStub        func(*http.Request) (string, error)
	checkReqMutex       sync.RWMutex
	checkReqArgsForCall []struct {
		arg1 *http.Request
	}
	checkReqReturns struct {
		result1 string
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeReqHealthChecker) CheckReq(arg1 *http.Request) (string, error) {
	fake.checkReqMutex.Lock()
	fake.checkReqArgsForCall = append(fake.checkReqArgsForCall, struct {
		arg1 *http.Request
	}{arg1})
	fake.recordInvocation("CheckReq", []interface{}{arg1})
	fake.checkReqMutex.Unlock()
	if fake.CheckReqStub != nil {
		return fake.CheckReqStub(arg1)
	} else {
		return fake.checkReqReturns.result1, fake.checkReqReturns.result2
	}
}

func (fake *FakeReqHealthChecker) CheckReqCallCount() int {
	fake.checkReqMutex.RLock()
	defer fake.checkReqMutex.RUnlock()
	return len(fake.checkReqArgsForCall)
}

func (fake *FakeReqHealthChecker) CheckReqArgsForCall(i int) *http.Request {
	fake.checkReqMutex.RLock()
	defer fake.checkReqMutex.RUnlock()
	return fake.checkReqArgsForCall[i].arg1
}

func (fake *FakeReqHealthChecker) CheckReqReturns(result1 string, result2 error) {
	fake.CheckReqStub = nil
	fake.checkReqReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

func (fake *FakeReqHealthChecker) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.checkReqMutex.RLock()
	defer fake.checkReqMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeReqHealthChecker) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ api.ReqHealthChecker = new(FakeReqHealthChecker)
